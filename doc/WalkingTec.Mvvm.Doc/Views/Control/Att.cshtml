@model WalkingTec.Mvvm.Core.BaseVM
<style>
    a {
        color: #01aaed
    }
</style>
框架有一些自定义的属性可以写在Controller或Controller中的方法上

<wt:fieldset field-set-style="Simple" title="ActionDescription">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>框架会使用这里定义的名称作为Model名和Action名存在FrameworkModules和FrameworkActions表中</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="AllRight">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>AllRight标记的Controller或者方法会跳过页面权限验证，只要用户登陆了就可以访问</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="Public">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>Public标记的Controller或者方法为公开方法，不需要登陆就可以访问</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="DebugOnly">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>DebugOnly标记的Controller或者方法只有在配置文件中IsQuickDebug为true时才可以访问</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="FixConnection">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>FixConnection标记的Controller或者方法将使用指定的数据库作为默认DataContext，详情请见<a href="/#/Global/CS">数据库分库</a></p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="ReInit">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>框架默认会在Post回来的VM验证失败时自动调用VM中的ReInitVM()方法，通过标记ReInit可以改变这种默认行为</p>
</wt:fieldset>
<wt:fieldset field-set-style="Simple" title="ValidateFormItemOnly">
    <p>可以写在Controller中的方法上</p>
    <p>指示框架只验证表单提交的字段，对于表单没有提交的字段不要验证，主要用于修改某些字段的方法上</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="StringNeedLTGT">
    <p>可以写在Controller或Controller中的方法上</p>
    <p>框架默认会自动过滤表单中&lt,&gt这种字符，如果你需要这些字符，比如富文本内容，请在Action上加上这个标记</p>
</wt:fieldset>

<wt:fieldset field-set-style="Simple" title="NoLog">
  <p>可以写在Controller或Controller中的方法上</p>
  <p>标记方法不需要记录系统日志</p>
</wt:fieldset>
<script>
  $("#@Model.ViewDivId").parent().css("height", "auto");
</script>
