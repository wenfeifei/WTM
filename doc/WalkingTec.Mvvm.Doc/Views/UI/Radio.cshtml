@model WalkingTec.Mvvm.Doc.ViewModels.StudentVms.StudentVm

<wt:fieldset field-set-style="Simple" title="Radio">
 </wt:fieldset>
   <p>Radio的常用属性有：</p>
        <table lay-filter="parse-table-demo">
            <thead>
                <tr>
                    <th lay-data="{field:'username', width:200}">属性</th>
                    <th lay-data="{field:'joinTime', width:600}">描述</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Id</td>
                    <td>控件Id，默认根据绑定字段名称生成</td>
                </tr>
                <tr>
                    <td>Field</td>
                    <td>绑定字段，必填</td>
                </tr>
                <tr>
                    <td>Disabled</td>
                    <td>是否禁用</td>
                </tr>
                <tr>
                    <td>Name</td>
                    <td>控件Name，默认根据绑定字段名称生成</td>
                </tr>
                <tr>
                    <td>LabelText</td>
                    <td>标签内容</td>
                </tr>
                <tr>
                    <td>LabelWidth</td>
                    <td>标签的长度，默认为80</td>
                </tr>
                <tr>
                    <td>HideLabel</td>
                    <td>是否隐藏标签</td>
                </tr>
                <tr>
                    <td>YesText</td>
                    <td>当绑定字段为布尔类型是，对应true显示的文本，默认为‘是’</td>
                </tr>
                <tr>
                    <td>NoText</td>
                    <td>当绑定字段为布尔类型是，对应false显示的文本，默认为‘否’</td>
                </tr>
                <tr>
                    <td>Items</td>
                    <td>列表数据源，当绑定字段为布尔或枚举时，框架会自动反射下拉列表，不需要填</td>
                </tr>
                <tr>
                    <td>ChangeFunc</td>
                    <td>选择改变后触发的js</td>
                </tr>
            </tbody>
        </table>
    <wt:quote>
        <p>Radio类似单选的ComboBox，支持直接绑定枚举，布尔字段，也支持通过Items属性设置数据源，Items需要绑定一个List<ComboSelectListItem>,ComboSelectListItem是框架提供的辅助类，有Text，Value和Selected三个属性</p>
        <ul class="doc">
            <li>当绑定枚举字段时，框架自动反射枚举，根据每个枚举值的display属性作为Text，枚举值本身作为Value来生成下拉菜单</li>
            <li>当绑定布尔字段时，框架根据YesText和NoText的值作为Text，布尔值作为Value来生成下拉菜单，默认true显示‘是’，false显示‘否’</li>
            <li>当指定了items数据源时，框架使用ComboSelectListItem中的Text属性作为Text，Value属性作为Value来生成下拉菜单</li>
            <li>items数据源也可以指定为其他类型的List，这种情况下框架会为List中的每一项调用ToString作为下拉菜单的Text和Value</li>
        </ul>
    </wt:quote>
        <wt:tab>
            <wt:tabheaders>
                <wt:tabheader title="效果" />
                <wt:tabheader title="代码" />
            </wt:tabheaders>
            <wt:tabcontents>
                <wt:tabcontent>
                    <wt:form vm="@Model" style="max-width:600px;">
                        <wt:radio field="Entity.Sex" />
                        <wt:radio field="Entity.IsValid" yes-text="真的是" no-text="真不是" />
                        <wt:radio field="SelectedSchool" label-text="学校" items="AllSchools" />
                        <wt:row align="AlignEnum.Right">
                            <wt:submitbutton disabled="true" />
                            <wt:closebutton disabled="true" />
                        </wt:row>
                    </wt:form>
                </wt:tabcontent>
                <wt:tabcontent>
                    <wt:code>
&ltwt:form vm="@@Model" width="600"&gt
    &ltwt:radio field="Entity.Sex" /&gt
    &ltwt:radio field="Entity.IsValid" yes-text="真的是" no-text="真不是" /&gt
    &ltwt:radio field="SelectedSchool" label-text="学校" items="AllSchools" /&gt
    &ltwt:row align="AlignEnum.Right"&gt
        &ltwt:submitbutton disabled="true" /&gt
        &ltwt:closebutton disabled="true" /&gt
    &lt/wt:row&gt
&lt/wt:form&gt

                    </wt:code>
                </wt:tabcontent>
            </wt:tabcontents>
        </wt:tab>

    <script>
    layui.use('code',function(){layui.code({ about: false })})
        layui.table.init('parse-table-demo', {
        limit: 100, page: false
        });
    </script>
<script>
  $("#@Model.ViewDivId").parent().css("height", "auto");
</script>
