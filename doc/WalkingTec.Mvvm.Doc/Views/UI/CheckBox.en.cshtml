@model WalkingTec.Mvvm.Doc.ViewModels.StudentVms.StudentVm

<wt:fieldset field-set-style="Simple" title="CheckBox">
 </wt:fieldset>
   <p>Common properties of checkbox are:</p>
        <table lay-filter="parse-table-demo" >
            <thead>
                <tr>
                    <th lay-data="{field:'username', width:200}">Property</th>
                    <th lay-data="{field:'joinTime', width:600}">Describe</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Id</td>
                    <td>Control ID, generated by default according to the bound field name</td>
                </tr>
                <tr>
                    <td>Field</td>
                    <td>Binding field; required</td>
                </tr>
                <tr>
                    <td>Disabled</td>
                    <td>Disabled,or not</td>
                </tr>
                <tr>
                    <td>Name</td>
                    <td>Control name, generated by default according to the bound field name</td>
                </tr>
                <tr>
                    <td>LabelText</td>
                    <td>Label content</td>
                </tr>
                <tr>
                    <td>LabelWidth</td>
                    <td>Label length, default= 80</td>
                </tr>
                <tr>
                    <td>HideLabel</td>
                    <td>Hide label,or not</td>
                </tr>
                <tr>
                    <td>Items</td>
                    <td>List data source</td>
                </tr>
                <tr>
                    <td>ChangeFunc</td>
                    <td>JS triggered after change</td>
                </tr>
            </tbody>
        </table>
    <wt:quote>
        <p>CheckBox is generally used to select multiple data. The data structure of binding is similar to that of ComboBox that supports multiple selection. The data source is set through the Items property. Items need to bind a list. ComboSelectListItem is an auxiliary class provided by the framework. It has three properties: Text, Value and Selected.</p>
        <ul class="doc">
            <li>When the items data source is set, the framework uses the text property in ComboSelectListItem as text and the value property as value to generate the drop-down menu</li>
            <li>The items data source can also be specified as other types of lists. In this case, the framework will call ToString as the text and value of the drop-down menu for each item in the list</li>
        </ul>
    </wt:quote>
        <wt:tab>
            <wt:tabheaders>
                <wt:tabheader title="Effect" />
                <wt:tabheader title="Code" />
            </wt:tabheaders>
            <wt:tabcontents>
                <wt:tabcontent>
                    <wt:form vm="@Model" style="max-width:600px;">
                        <wt:checkbox field="SelectedSchools" label-text="Schools" items="AllSchools" />
                        <wt:row align="AlignEnum.Right">
                            <wt:submitbutton disabled="true" />
                            <wt:closebutton disabled="true" />
                        </wt:row>
                    </wt:form>
                </wt:tabcontent>
                <wt:tabcontent>
                    <wt:code>
&ltwt:form vm="@@Model" width="600"&gt
    &ltwt:checkbox field="SelectedSchools" label-text="Schools" items="AllSchools" /&gt
    &ltwt:row align="AlignEnum.Right"&gt
        &ltwt:submitbutton disabled="true" /&gt
        &ltwt:closebutton disabled="true" /&gt
    &lt/wt:row&gt
&lt/wt:form&gt

                    </wt:code>
                </wt:tabcontent>
            </wt:tabcontents>
        </wt:tab>

    <script>
    layui.use('code',function(){layui.code({ about: false })})
      layui.table.init('parse-table-demo', {
        limit: 100, page: false
        });
    </script>
<script>
  $("#@Model.ViewDivId").parent().css("height", "auto");
</script>
