# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

# disabgle ci trigger
trigger: none

# disabgle pr trigger
pr: none

jobs:
  - job: Linux
    pool:
      vmImage: "ubuntu-latest"

    variables:
      imageName: "walkingtec/wtmdoc"

    steps:
      - task: DockerInstaller@0
        inputs:
          dockerVersion: "19.03.2"

      - task: Docker@2
        displayName: Build an image
        inputs:
          containerRegistry: "dockerhub"
          repository: "$(imageName)"
          command: "build"
          Dockerfile: "wtmdoc.Dockerfile"
          addPipelineData: false

      - task: Docker@2
        displayName: Login Dockerhub
        inputs:
          containerRegistry: "dockerhub"
          command: "login"

      - task: Docker@2
        displayName: Push image
        inputs:
          containerRegistry: "dockerhub"
          repository: "$(imageName)"
          command: "push"

      - task: Docker@2
        displayName: logout Dockerhub
        inputs:
          containerRegistry: "dockerhub"
          command: "logout"

      - task: SSH@0
        inputs:
          sshEndpoint: "39.105.19.32"
          runOptions: "inline"
          inline: |
            docker pull $(imageName):$(Build.BuildId)

            docker stop wtmdoc
            docker rm wtmdoc

            docker run \
            --name wtmdoc \
            -p 8003:80 \
            -v /etc/localtime:/etc/localtime \
            -d $(imageName):$(Build.BuildId)

            docker stop nginx
            docker rm nginx

            docker run \
            --name nginx \
            -p 80:80 \
            -p 443:443 \
            --link meijiapi:meijiapi \
            --link meiji:meiji \
            --link meijiapi_prod:meijiapi_prod \
            --link meiji_prod:meiji_prod \
            --link wtmdoc:wtmdoc \
            -v /etc/localtime:/etc/localtime \
            -v /data/docker/container/nginx/conf:/etc/nginx \
            -v /data/docker/container/nginx/html:/etc/nginx/html/ \
            -v /data/docker/container/nginx/logs:/nginx/logs \
            -v /data/docker/container/meiji/files:/nginx/meiji_files \
            -v /data/docker/container/meiji_prod/files:/nginx/meiji_prod_files \
            -d \
            nginx:1.15.8

